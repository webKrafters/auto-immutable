{"version":3,"file":"component---src-pages-api-method-set-tags-index-tsx-84c19279cb31c1ce3b87.js","mappings":"wLAMA,MAAMA,EAAkCC,IAAA,IAAC,GAAEC,KAAOC,GAAO,SACrDC,EAAAA,cAACC,EAAAA,EAAM,eACHC,MAAO,CACHC,UAAW,SACXC,WAAY,IACZC,YAAa,GAEjBP,GAAM,wBAAwBA,WACzBC,GACP,EAoBN,UAjB6DO,IAAA,IAAC,UAAEC,GAAW,SACvEP,EAAAA,cAAAA,UAAAA,CAASO,UAAa,4BAA4BA,KAC9CP,EAAAA,cAAAA,KAAAA,KAAI,4BACJA,EAAAA,cAACQ,EAAAA,EAAS,KAAC,mBAAgB,8BAAQR,EAAAA,cAACC,EAAAA,EAAM,CAACH,GAAG,iBAAgB,eAA4B,IAAC,4BAAM,YAAe,uEAChHE,EAAAA,cAACQ,EAAAA,EAAS,KAAC,+DAA4D,8BAAQ,KAAU,qCACzFR,EAAAA,cAACQ,EAAAA,EAAS,KACNR,EAAAA,cAACS,EAAAA,EAAQ,KAACT,EAAAA,cAAAA,MAAAA,KAAKA,EAAAA,cAACJ,EAAO,CAACE,GAAG,SAAQ,YAAkB,qDACrDE,EAAAA,cAACS,EAAAA,EAAQ,KAACT,EAAAA,cAAAA,MAAAA,KAAKA,EAAAA,cAACJ,EAAO,CAACE,GAAG,UAAS,aAAmB,sDACvDE,EAAAA,cAACS,EAAAA,EAAQ,KAACT,EAAAA,cAAAA,MAAAA,KAAKA,EAAAA,cAACJ,EAAO,CAACE,GAAG,QAAO,WAAiB,2BACnDE,EAAAA,cAACS,EAAAA,EAAQ,KAACT,EAAAA,cAAAA,MAAAA,KAAKA,EAAAA,cAACJ,EAAO,CAACE,GAAG,QAAO,WAAiB,qCACnDE,EAAAA,cAACS,EAAAA,EAAQ,KAACT,EAAAA,cAAAA,MAAAA,KAAKA,EAAAA,cAACJ,EAAO,CAACE,GAAG,WAAU,cAAoB,+BACzDE,EAAAA,cAACS,EAAAA,EAAQ,KAACT,EAAAA,cAAAA,MAAAA,KAAKA,EAAAA,cAACJ,EAAO,CAACE,GAAG,OAAM,UAAgB,2BACjDE,EAAAA,cAACS,EAAAA,EAAQ,KAACT,EAAAA,cAAAA,MAAAA,KAAKA,EAAAA,cAACJ,EAAO,CAACE,GAAG,UAAS,aAAmB,2BAErD,C,uEC5Bd,MAAMY,EAAeb,IAAAA,IAAC,UAAEU,GAEvB,QACI,aAAYA,EAAa,IAAIA,IAAe,GAAK,EAGhDE,EAAgDH,IAAmB,IAAlB,SAAEK,GAAU,EAC/D,MAAMZ,GAAQa,EAAAA,EAAAA,UAAQ,iBAAO,CACzBL,UAAWG,EAAcC,EAASZ,OAClCc,KAAyB,QAArB,EAAEF,EAASZ,MAAMc,YAAI,QAAI,WAChC,GAAG,CACAF,EAASZ,MAAMQ,UACfI,EAASZ,MAAMc,OAEnB,OAAOC,EAAAA,EAAAA,cAAcH,EAAUZ,EAAO,EAG1CU,EAASM,YAAc,WAEvB,O,uECfA,MAAMP,GAA0CQ,EAAAA,EAAAA,aAE9C,CAAC,EAAmCC,KAAG,IAAtC,SAAEN,EAAQ,UAAEJ,KAAcR,GAAO,SAChCC,EAAAA,cAAAA,MAAAA,OAAAA,OAAAA,CACIa,KAAK,aACAd,EAAK,CACVQ,UAAa,aAAYA,EAAa,IAAIA,IAAe,IACzDU,IAAMA,IAEJC,EAAAA,SAASC,IAAKR,GAAUS,GAAKA,IAC7B,IAGVZ,EAAUO,YAAc,YAExB,O","sources":["webpack://auto-immutable-docs/./src/pages/api/method/set/tags/index.tsx","webpack://auto-immutable-docs/./src/partials/list-item/component.tsx","webpack://auto-immutable-docs/./src/partials/paragraph/component.tsx"],"sourcesContent":["import React from 'react';\n\nimport Anchor, { Props as AnchorProps } from '../../../../../partials/anchor';\nimport ListItem from '../../../../../partials/list-item';\nimport Paragraph from '../../../../../partials/paragraph';\n\nconst TagLink : React.FC<AnchorProps> = ({ to, ...props }) => (\n    <Anchor\n        style={{\n            fontStyle: 'italic',\n            fontWeight: 500,\n            marginRight: 6\n        }}\n        to={ `/api/method/set/tags/${ to }-usage` }\n        { ...props }\n    />\n);\n\nconst SetMethodApiTagsPage : React.FC<{className: string}> = ({ className }) => (\n    <article className={ `set-method-api-tags-page ${ className }` }>\n        <h1>Set Method Tags Commands</h1>\n        <Paragraph>By default, the <strong><Anchor to=\"/api#consumer\">consumer's</Anchor></strong> <code>set(...)</code> method recursively merges new changes into current immutable data.</Paragraph>\n        <Paragraph>To overwrite current Immutable data slices with new values, <strong>7</strong> tag commands have been provided:</Paragraph>\n        <Paragraph>\n            <ListItem><div><TagLink to=\"clear\">@@CLEAR:</TagLink> sets property to its corresponding empty value.</div></ListItem>\n            <ListItem><div><TagLink to=\"delete\">@@DELETE:</TagLink> removes plain object properties and array items.</div></ListItem>\n            <ListItem><div><TagLink to=\"move\">@@MOVE:</TagLink> moves array elements.</div></ListItem>\n            <ListItem><div><TagLink to=\"push\">@@PUSH:</TagLink> pushes new items into an array.</div></ListItem>\n            <ListItem><div><TagLink to=\"replace\">@@REPLACE:</TagLink> replaces property values.</div></ListItem>\n            <ListItem><div><TagLink to=\"set\">@@SET:</TagLink> sets property values.</div></ListItem>\n            <ListItem><div><TagLink to=\"splice\">@@SPLICE:</TagLink> splices array items.</div></ListItem>\n        </Paragraph>\n    </article>\n);\n\nexport default SetMethodApiTagsPage;\n","import React, { cloneElement, useMemo } from 'react';\n\nimport './style.scss';\n\nconst getClassName = ({ className } : {\n    className? : string\n}) => (\n    `list-item${ className ? ` ${ className }` : '' }`\n);\n\nconst ListItem : React.FC<{children : JSX.Element}> = ({ children }) => {\n    const props = useMemo(() => ({\n        className: getClassName( children.props ),\n        role: children.props.role ?? 'listitem'\n    }), [\n        children.props.className,\n        children.props.role\n    ]);\n    return cloneElement( children, props );\n};\n\nListItem.displayName = 'ListItem';\n\nexport default ListItem;","import type { NamedExoticComponent } from 'react';\n\nimport React, { Children, forwardRef } from 'react';\n\nimport './style.scss';\n\nexport type Props = JSX.IntrinsicElements[ \"div\" ];\n\nconst Paragraph : NamedExoticComponent<Props> = forwardRef<\n    HTMLDivElement, Props\n>(({ children, className, ...props }, ref ) => (\n    <div\n        role=\"paragraph\"\n        { ...props }\n        className={ `paragraph${ className ? ` ${ className }` : '' }` }\n        ref={ ref }\n    >\n        { Children.map( children, c => c ) }\n    </div>\n));\n\nParagraph.displayName = 'Paragraph';\n\nexport default Paragraph;"],"names":["TagLink","_ref","to","props","React","Anchor","style","fontStyle","fontWeight","marginRight","_ref2","className","Paragraph","ListItem","getClassName","children","useMemo","role","cloneElement","displayName","forwardRef","ref","Children","map","c"],"sourceRoot":""}