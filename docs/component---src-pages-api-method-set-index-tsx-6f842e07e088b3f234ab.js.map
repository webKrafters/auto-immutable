{"version":3,"file":"component---src-pages-api-method-set-index-tsx-6f842e07e088b3f234ab.js","mappings":"uLAuHA,UAzDqEA,IAAA,IAAC,UAAEC,EAAS,SAAEC,GAAU,SACzFC,EAAAA,cAAAA,UAAAA,CAASF,UAAa,uBAAuBA,KACzCE,EAAAA,cAAAA,KAAAA,KAAI,+BACJA,EAAAA,cAACC,EAAAA,EAAS,KAAC,gFAA6E,gBAACC,EAAAA,EAAM,CAACC,GAAG,iBAAgBH,EAAAA,cAAAA,OAAAA,KAAM,qBAAgC,8BACzJA,EAAAA,cAACC,EAAAA,EAAS,KAAC,OAAI,4BAAM,YAAe,kBAAe,4BAAM,cAAiB,gEAC1ED,EAAAA,cAACC,EAAAA,EAAS,KAAC,4DACXD,EAAAA,cAACC,EAAAA,EAAS,KAAC,QACF,4BAAM,YAAe,mBAAgB,8BAAQ,KAAU,uBAC5D,0BACID,EAAAA,cAAAA,KAAAA,KAAIA,EAAAA,cAAAA,SAAAA,KAAQA,EAAAA,cAAAA,OAAAA,KAAM,WAAc,KAAU,4MAC1CA,EAAAA,cAAAA,KAAAA,KAAIA,EAAAA,cAAAA,SAAAA,KAAQA,EAAAA,cAAAA,OAAAA,KAAM,cAAiB,KAAU,4HAAyH,4BAAM,WAAc,qBACzL,yGACiG,4BAAM,WAAc,oBAE9HA,EAAAA,cAAAA,MAAAA,KACIA,EAAAA,cAAAA,KAAAA,CAAII,GAAG,sBAAqB,YAC5BJ,EAAAA,cAACK,EAAAA,EAAS,KArErB,y5BAuEOL,EAAAA,cAAAA,KAAAA,CAAIM,MAAO,CAAEC,UAAW,SAAU,gBACjB,4BAAM,WAAc,sBAErCP,EAAAA,cAACC,EAAAA,EAAS,KACND,EAAAA,cAAAA,QAAAA,KAAO,+DAEH,2BACAA,EAAAA,cAAAA,SAAAA,KACIA,EAAAA,cAACE,EAAAA,EAAM,CAACC,GAAG,4BACLJ,aAAQ,EAARA,EAAUS,OAAQ,+BAKpCR,EAAAA,cAACC,EAAAA,EAAS,KACND,EAAAA,cAAAA,QAAAA,KAAO,iCAEH,2BACAA,EAAAA,cAAAA,SAAAA,KACIA,EAAAA,cAACE,EAAAA,EAAM,CAACC,GAAG,qCACLJ,aAAQ,EAARA,EAAUS,OAAQ,wCAKpCR,EAAAA,cAACC,EAAAA,EAAS,KACND,EAAAA,cAAAA,QAAAA,KAAO,2BAEH,2BACAA,EAAAA,cAAAA,SAAAA,KACIA,EAAAA,cAACE,EAAAA,EAAM,CAACC,GAAG,wBACLJ,aAAQ,EAARA,EAAUS,OAAQ,2BAK9B,C,uEC5Gd,MAAMP,GAA0CQ,EAAAA,EAAAA,aAE9C,CAAC,EAAmCC,KAAG,IAAtC,SAAEC,EAAQ,UAAEb,KAAcc,GAAO,SAChCZ,EAAAA,cAAAA,MAAAA,OAAAA,OAAAA,CACIa,KAAK,aACAD,EAAK,CACVd,UAAa,aAAYA,EAAa,IAAIA,IAAe,IACzDY,IAAMA,IAEJI,EAAAA,SAASC,IAAKJ,GAAUK,GAAKA,IAC7B,IAGVf,EAAUgB,YAAc,YAExB,O","sources":["webpack://auto-immutable-docs/./src/pages/api/method/set/index.tsx","webpack://auto-immutable-docs/./src/partials/paragraph/component.tsx"],"sourcesContent":["import type { PageProps } from '../../../../page-context';\n\nimport React from 'react';\n\nimport Anchor from '../../../../partials/anchor';\nimport CodeBlock from '../../../../partials/code-block';\nimport Paragraph from '../../../../partials/paragraph';\n\nconst SAMPLE =\n`import AutoImmutable from 'auto-immutable';\n\nconst aImmutable = new AutoImmutable({\n    a: {\n        b: 5,\n        c: [\n            6,\n            {\n                d: 7,\n                e: 8,\n                f: 9\n            }\n        ]\n    }\n});\n\nconst consumer = aImmutable.connect();\n\nconsumer.set({\n    p: 'some test data',\n    a: {\n        p: {\n            t: true\n        },\n        c: {\n            1: {\n                e: 720\n            }\n            3: /\\w+/\n        }\n    }\n});\n// updates the AutoImmutable instance data to:\n// {\n//     a: {\n//         b: 5,\n//         c: [\n//             6,\n//             {\n//                 d: 7,\n//                 e: 720,\n//                 f: 9\n//             },\n//             undefined,\n//             /\\w+/\n//         ],\n//         p: {\n//             t: true\n//         }\n//     },\n//     p: 'some test data'\n}`;\n\nconst SetMethodApiPage : React.FC<PageProps & {className: string}> = ({ className, location }) => (\n    <article className={ `set-method-api-page ${ className }` }>\n        <h1>Updating AutoImmutable Data</h1>\n        <Paragraph>Any AutoImmutable instance communicates with its environment through its own <Anchor to=\"/api#consumer\"><code>Connection class</code></Anchor> (the consumer) instances.</Paragraph>\n        <Paragraph>The <code>set(...)</code> method of the <code>Connection</code> instance provides the means of updating AutoImmutable data.</Paragraph>\n        <Paragraph>Any attempt to update through any other means is a noop.</Paragraph>\n        <Paragraph>\n            This <code>set(...)</code> method accepts <strong>2</strong> arguments - namely:\n            <ol>\n                <li><strong><code>changes</code>:</strong> a single object payload or an array of object payloads containing data nodes to add and/or merge into the AutoImmutable instance data along with operations to perform at specific existing data nodes.</li>\n                <li><strong><code>onComplete</code>:</strong> an optional callback function to be called at the completion of the update operation. This callback is invoked with the <code>changes</code> payload object.</li>\n            </ol>\n            It will create new property pathways into the AutoImmutable instance data for new properties found in <code>changes</code> payload object.\n        </Paragraph>\n        <div>\n            <h4 id=\"get-method-example\">Example:</h4>\n            <CodeBlock>{ SAMPLE }</CodeBlock>\n        </div>\n        <h2 style={{ marginTop: '2rem' }}>\n            More on the `<code>changes</code>` Argument Payload\n        </h2>\n        <Paragraph>\n            <label>\n                Creating, Updating & Deleting AutoImmutable data Properties:\n                <br />\n                <strong>\n                    <Anchor to=\"/api/method/set/overview\">\n                        { location?.origin }/api/method/set/overview\n                    </Anchor>\n                </strong>\n            </label>\n        </Paragraph>\n        <Paragraph>\n            <label>\n                Updating AutoImmutable Arrays:\n                <br />\n                <strong>\n                    <Anchor to=\"/api/method/set/overview#indexing\">\n                        { location?.origin }/api/method/set/overview#indexing\n                    </Anchor>\n                </strong>\n            </label>\n        </Paragraph>\n        <Paragraph>\n            <label>\n                Finer Control with Tags:\n                <br />\n                <strong>\n                    <Anchor to=\"/api/method/set/tags\">\n                        { location?.origin }/api/method/set/tags\n                    </Anchor>\n                </strong>\n            </label>\n        </Paragraph>\n    </article>\n);\n\nexport default SetMethodApiPage;\n","import type { NamedExoticComponent } from 'react';\n\nimport React, { Children, forwardRef } from 'react';\n\nimport './style.scss';\n\nexport type Props = JSX.IntrinsicElements[ \"div\" ];\n\nconst Paragraph : NamedExoticComponent<Props> = forwardRef<\n    HTMLDivElement, Props\n>(({ children, className, ...props }, ref ) => (\n    <div\n        role=\"paragraph\"\n        { ...props }\n        className={ `paragraph${ className ? ` ${ className }` : '' }` }\n        ref={ ref }\n    >\n        { Children.map( children, c => c ) }\n    </div>\n));\n\nParagraph.displayName = 'Paragraph';\n\nexport default Paragraph;"],"names":["_ref","className","location","React","Paragraph","Anchor","to","id","CodeBlock","style","marginTop","origin","forwardRef","ref","children","props","role","Children","map","c","displayName"],"sourceRoot":""}