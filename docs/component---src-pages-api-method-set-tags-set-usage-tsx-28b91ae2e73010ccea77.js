"use strict";(self.webpackChunkauto_immutable_docs=self.webpackChunkauto_immutable_docs||[]).push([[2748],{73521:function(e,n,a){a.r(n),a.d(n,{Head:function(){return s}});var t=a(67294),l=a(75591),r=a(30645),u=a(41520),m=a(61309);n.default=e=>{let{className:n}=e;return t.createElement("article",{className:`set-method-api-set-tag-page ${n}`},t.createElement("h1",null,"@@SET Tag Usage"),t.createElement("strong",null,"Signature 1:"),t.createElement("pre",null,"{ '@@SET': <any> }"),t.createElement(m.Z,null," "," "),t.createElement("strong",null,"Signature 2:"),t.createElement("pre",null,"{ '@@SET': ( currentValue: <any> ) => <any> }"),t.createElement(m.Z,{id:"purpose"},"This tag is mainly for handling edge cases."),t.createElement(m.Z,null,"Please use sparingly. In most cases, calling the consumer.set(...) method with or without any of the other tags is sufficient and most efficient."),t.createElement(m.Z,null,"This and the '",t.createElement("strong",null,t.createElement(r.Z,{to:"/api/method/set/tags/replace-usage"},"@@REPLACE")),"' tag are functionally equivalent when used with a replacement value argument."),t.createElement(m.Z,null,"Be aware that the compute function argument may be ",t.createElement("code",null,"undefined")," for properties which do not yet exist in the AutoImmutable data."),t.createElement("h4",null,"Example:"),t.createElement(u.Z,null,"import AutoImmutable, { Tag } from 'auto-immutable';\n\nconst protectedData = {\n    a: {\n        b: [\n            { x: 7, y: 8, z: 9 },\n            { x: 17, y: 18, z: 19 }\n        ]\n    },\n    j: 10\n};\n\nconst aImmutable = new AutoImmutable( protectedData );\nconst consumer = aImmutable.connect();\n\n/* rewrites aImmutable data to { ...aImmutable data, a: 'Demo', j: 17 } */\nconsumer.set({\n    [ Tag.SET ]: currentValue => ({\n        ...currentValue,\n        a: 'Demo',\n        j: 17\n    })\n});\n\n/* rewrites aImmutable data.a to { ...aImmutable data, message: 'Testing...' } */\nconsumer.set({\n    a: {\n        [ Tag.SET ]: currentValue => ({\n            ...currentValue,\n            message: 'Testing...'\n        })\n    }\n});\n\n//  rewrites aImmutable data.a.b[1] to { x: 97, y: 98, z: 99 };\n//  leaving aImmutable data.a.b = [\n//       { x: 7, y: 8, z: 9 },\n//       { x: 97, y: 98, z: 99 }\n//  ]\nconsumer.set({\n    a: {\n        b: [\n            aImmutable data.a.b[ 0 ],\n            {\n                [ Tag.SET ]: currentValue => ({\n                    ...currentValue,\n                    x: 97,\n                    y: 98,\n                    z: 99\n                })\n            }\n        ]\n    }\n});\n\n//  rewrites aImmutable data.a.b[1] to { x: 97, y: 98, z: 99 };\n//  leaving aImmutable data.a.b = [\n//     { x: 7, y: 8, z: 9 },\n//     { x: 97, y: 98, z: 99 }\n//  ]\n//  uses indexing (RECOMMENDED)\nconsumer.set({\n    a: {\n        b: {\n            1: {\n                [ Tag.SET ]: currentValue => ({\n                    ...currentValue,\n                    x: 97,\n                    y: 98,\n                    z: 99\n                })\n            }\n        }\n    }\n});"))};const s=()=>t.createElement("title",null,l.default.title,": @@SET")},61309:function(e,n,a){a.d(n,{Z:function(){return r}});var t=a(67294);const l=(0,t.forwardRef)(((e,n)=>{let{children:a,className:l,...r}=e;return t.createElement("div",Object.assign({role:"paragraph"},r,{className:"paragraph"+(l?` ${l}`:""),ref:n}),t.Children.map(a,(e=>e)))}));l.displayName="Paragraph";var r=l}}]);
//# sourceMappingURL=component---src-pages-api-method-set-tags-set-usage-tsx-28b91ae2e73010ccea77.js.map